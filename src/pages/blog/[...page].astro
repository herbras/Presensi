---
import { Image } from "astro:assets";
import { latestArticlesData } from "./generateBlog";
import BaseLayout from "@layouts/Layout.astro";

// Assuming this is the structure of your articles, replace 'any' with actual types
interface Article {
  id: string;
  title: string;
  summary: string;
  publishedDate: string;
  readTime: string;
  category: string;
  imageUrl: string;
  articleUrl: string;
  slug: string;
  authorPhoto: string;
  authorName: string;
}

// Define a type for the 'paginate' function
type PaginateFunction = (
  articles: Article[],
  config: { pageSize: number }
) => any;

// Define a type for the 'page' prop
interface Page {
  data: Article[];
  url: {
    prev?: string;
    next?: string;
  };
}

// Define a type for the component props
interface ComponentProps {
  paginate: PaginateFunction;
  page: Page;
  entry: {
    title: string;
    summary: string;
  };
}

export async function getStaticPaths({ paginate }: ComponentProps) {
  return paginate(latestArticlesData.latestArticles, { pageSize: 8 });
}

const { page, entry } = Astro.props as ComponentProps;
---

<BaseLayout
  title={entry?.title || "Default Title"}
  description={entry?.summary || "Default Description"}
>
  <section
    class="grid px-5 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 mt-3 md:[&>*:first-child]:col-span-2"
  >
    {
      page.data.map((article) => (
        <article class="grid grid-rows-[300px_auto] md:grid-rows-[300px_220px] min-h-full group">
          <a
            class="relative decoration-none effect overflow-hidden"
            href={`/blog/${article.slug}`}
          >
            <Image
              src={article.imageUrl}
              class="h-full min-w-full object-cover hover:scale-[101%] transition-all duration-200 rounded-[2px]"
              alt={article.slug}
              width="600"
              height="200"
              loading="lazy"
              decoding="async"
              transition:name={article.slug}
            />
            <div class="z-30 absolute bottom-0 w-full h-20">
              <div class="-z-10 absolute bottom-0 glass w-full min-h-full" />
              <div class="flex items-center justify-between gap-x-1 text-white px-6 py-4">
                <div class="flex flex-col gap-1 items-center justify-center">
                  <time
                    class="text-sm font-bold text-opacity-60"
                    datetime={article.publishedDate}
                  >
                    {new Date(article.publishedDate).toLocaleDateString()}
                  </time>
                  <span class="text-sm">{article.readTime}</span>
                </div>
                <span class="pb-4">{article.category}</span>
              </div>
            </div>
          </a>
          <div class="flex justify-between flex-col gap-4 md:gap-0 py-6 pl-1">
            <div class="flex flex-col gap-3">
              <div class="flex flex-col gap-2">
                <a
                  class="text-2xl text-gray-700 dark:text-white decoration-none font-semibold -tracking-wider"
                  href={`/blog/${article.slug}`}
                >
                  {article.title}
                </a>
              </div>
              <p class="overflow-hidden line-clamp-3 text-gray-700 dark:text-white mb-5 font-[400] md:pr-[15%]">
                {article.summary}
              </p>
            </div>
            <footer class="flex justify-between items-center">
              <a
                href={`/blog/${article.slug}`}
                class="flex justify-center decoration-none items-center dark:text-white rounded-full hover:translate-x-1 transition-transform duration-150 ease-in-out font-semibold gap-1 group"
                aria-label={`go to ${article.title}`}
              >
                Read Post{" "}
                <span class="mt-[1px] group-hover:rotate-45 transition-transform duration-250 ease-in-out">
                  <svg
                    class="feather feather-arrow-up-right"
                    fill="none"
                    height="18"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2.5"
                    viewBox="0 0 24 24"
                    width="18"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <line x1="7" x2="17" y1="17" y2="7" />
                    <polyline points="7 7 17 7 17 17" />
                  </svg>
                </span>
              </a>
            </footer>
          </div>
        </article>
      ))
    }
  </section>
  <div class="flex p-12 justify-center mt-4">
    {
      page.url.prev ? (
        <a
          href={page.url.prev}
          class="px-4 py-2 mr-2 bg-blue-500 text-white rounded hover:bg-blue-700"
        >
          Sebelumnya
        </a>
      ) : null
    }
    {
      page.url.next ? (
        <a
          href={page.url.next}
          class="px-4 py-2 ml-2 bg-blue-500 text-white rounded hover:bg-blue-700"
        >
          Selanjutnya
        </a>
      ) : null
    }
  </div>
</BaseLayout>
